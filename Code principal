
# Charger les bibliothèques nécessaires
install.packages("blastula")
install.packages("keyring")
library(blastula)
library (keyring)
library(rvest)
library(dplyr)


# Liste des URL de recherche
urls <- c(
  "https://www.ebay.fr/sch/i.html?_nkw=chaussures+de+course&_sop=12"
  
)

# Fonction pour extraire les données brutes et les filtrer
extract_filtered_data <- function(url) {
  page <- read_html(url)
  
  # Extraire les noms, prix et liens
  names <- page %>%
    html_nodes(".s-item__title") %>%
    html_text()
  
  prices <- page %>%
    html_nodes(".s-item__price") %>%
    html_text()
  
  links <- page %>%
    html_nodes(".s-item__link") %>%
    html_attr("href")
  
  # Filtrer pour exclure les résultats non pertinents
  valid_names <- names[!grepl("Shop on eBay", names)]  # Exclure "Shop on eBay"
  valid_prices <- prices[!grepl("Shop on eBay", names)]  # Assurer que les prix sont cohérents
  valid_links <- links[!grepl("Shop on eBay", names)]  # Assurer que les liens sont cohérents
  
  # Créer le data frame avec les résultats filtrés
  result <- data.frame(
    Name = valid_names,
    Price = valid_prices,
    Link = valid_links,
    stringsAsFactors = FALSE
  )
  
  return(result)
}

# Appliquer la fonction sur les URLs
filtered_data <- lapply(urls, extract_filtered_data)

# Combiner les résultats extraits
final_data <- do.call(rbind, filtered_data)

# Nettoyer les prix pour extraire la première valeur dans une plage de prix (si applicable)
final_data <- final_data %>%
  mutate(
    # Extraire les prix et les convertir en numérique (gérer les plages de prix)
    Price_num = gsub("[^0-9,]", "", Price),
    Price_num = gsub(",", ".", Price_num),
    Price_num = as.numeric(sapply(strsplit(Price_num, " à "), `[`, 1))
  ) %>%
  # Filtrer les lignes où Price_num est NA (valeurs non convertibles)
  filter(!is.na(Price_num)) %>%
  # Filtrer les prix entre 60 et 150 EUR
  filter(Price_num > 60 & Price_num < 150) %>%
  select(Name, Price, Price_num, Link)

# Afficher les résultats filtrés
print(final_data)


# Créer un message avec les liens des chaussures
email_body <- paste(
  "Projet Monsieur Pelletier: donner une deuxième vie aux chaussures de course à pied  :\n\n",
  paste(final_data$Name, " - Prix: ", final_data$Price, " - Lien: ", final_data$Link, collapse = "\n"),
  sep = ""
)

# Créer l'email
email <- compose_email(
  body = md(email_body)
)

# Envoyer l'email avec les liens
smtp_send(
  email = email,
  from = "bricekubler@gmail.com",            # Remplacez par votre adresse Gmail
  to = "emilienhartmann@gmail.com",            # Adresse du destinataire
  subject = "POROJET MPE1 DATA ANALYSIS: Chaussures de course trouvées sur ebay",
  credentials = creds_key("gmail_correct")          # Utilisez la clé SMTP que vous avez créée
)
